services:
  app:
    build: ./backend/monolith-proxy/
    ports:
      - "${APP_PORT:-8080}:8080"
      - "${APP_DEBUG_PORT:-9010}:9010"
    depends_on:
      db:
        condition: service_healthy
      prometheus:
        condition: service_started
      grafana:
        condition: service_started
    environment:
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME:-demo}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${DB_PORT:-5432}/${DB_NAME:-csd}
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-postgres}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      HIKARI_MAX_POOL_SIZE: ${HIKARI_MAX_POOL_SIZE:-20}
      SLEUTH_SAMPLER_PROBABILITY: ${SLEUTH_SAMPLER_PROBABILITY:-1.0}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-3600000}
      JWT_CLOCK_SKEW: ${JWT_CLOCK_SKEW:-30000}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      FACEBOOK_CLIENT_ID: ${FACEBOOK_CLIENT_ID}
      FACEBOOK_CLIENT_SECRET: ${FACEBOOK_CLIENT_SECRET}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-*}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS:-*}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS:-*}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      SLACK_CHANNEL_NAME: ${SLACK_CHANNEL_NAME}
      KAFKA_USERNAME: ${KAFKA_USERNAME}
      KAFKA_PASSWORD: ${KAFKA_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  logging:
    build: ./backend/logging/
    env_file:
      - ./backend/logging/.env
    ports:
      - "${LOGGING_PORT:-5001}:5001"
    depends_on:
      app:
        condition: service_healthy

  db:
    image: postgres:${POSTGRES_VERSION:-15}
    environment:
      POSTGRES_DB: ${DB_NAME:-csd}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-csd}"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "${PROMETHEUS_PORT:-9090}:${PROMETHEUS_PORT:-9090}"

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin}
    depends_on:
      prometheus:
        condition: service_started

volumes:
  postgres_data:
