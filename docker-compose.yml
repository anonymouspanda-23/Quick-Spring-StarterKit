services:
  app:
    build: ./backend/monolith-proxy/
    ports:
      - "8080:8080"
      - "9010:9010" 
    depends_on:
      - db
      - prometheus
      - grafana
    environment:
      - SPRING_APPLICATION_NAME=demo
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/csd
      - DATABASE_HOST=localhost
      - DATABASE_NAME=csd
      - DATABASE_PORT=5432
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_NAME=demo
      - HIKARI_MAX_POOL_SIZE=20
      - SLEUTH_SAMPLER_PROBABILITY=1.0
      - JWT_SECRET=your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here
      - JWT_EXPIRATION=3600000
      - JWT_CLOCK_SKEW=30000
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - FACEBOOK_CLIENT_ID=your-facebook-client-id
      - FACEBOOK_CLIENT_SECRET=your-facebook-client-secret
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_METHODS=*
      - CORS_ALLOWED_HEADERS=*
      - SLACK_WEBHOOK_URL=your-webhook-url
      - SLACK_CHANNEL_NAME=your-channel-name
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  logging:
    build: ./backend/logging/
    env_file:
      - ./backend/logging/.env
    ports:
      - "5001:5001" 
    depends_on:
      - app

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=csd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
volumes:
  postgres_data:
