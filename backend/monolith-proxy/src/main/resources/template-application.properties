# Application Name
spring.application.name=demo

# DataSource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/csd
spring.datasource.username=postgres
spring.datasource.password=postgres

# JPA and Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Actuator Endpoints Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# Distributed Tracing Configuration
spring.sleuth.sampler.probability=1.0

# REST Docs Configuration
spring.hateoas.use-hal-as-default-json-media-type=false

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.starterkit.demo=INFO
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR

# Disable Hibernate Logs
logging.level.org.hibernate.engine.transaction.spi=ERROR
logging.level.org.hibernate.event=ERROR
logging.level.org.hibernate.jdbc=ERROR
logging.level.org.hibernate.loader.plan.exec.process=ERROR
logging.level.org.hibernate.persister.entity=ERROR

# OpenAPI Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Bean Definition Overriding
spring.main.allow-bean-definition-overriding=true

# JWT Properties
jwt.secret=your_jwt_secret_hereyour_jwt_secret_hereyour_jwt_secret_hereyour_jwt_secret_here
jwt.expiration=3600000
jwt.clockSkew=30000

# OAuth2 Properties
## Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=google-client-id
spring.security.oauth2.client.registration.google.client-secret=google-client-secret
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email, address, phone
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

## Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=facebook-client-id
spring.security.oauth2.client.registration.facebook.client-secret=facebook-client-secret
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.scope=public_profile, email
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v8.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v8.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture{url}
spring.security.oauth2.client.provider.facebook.jwk-set-uri=https://www.facebook.com/.well-known/openid-configuration


# CORS Configuration
cors.allowed-origins=*
cors.allowed-methods=*
cors.allowed-headers=*

# Server Error Configuration
server.error.whitelabel.enabled=false
server.error.include-message=always

# Disable Spring Boot Banner (Optional)
spring.main.banner-mode=off


