# ===============================================
# Application Name
# ===============================================
spring.application.name=${APPLICATION_NAME:demo}

# ===============================================
# DataSource Configuration
# ===============================================
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/csd}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:20}

# ===============================================
# Hibernate & JPA Configuration
# ===============================================
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# ===============================================
# FLYWAY Configuration
# ===============================================
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# ===============================================
# Virtual Threads Configuration
# ===============================================
spring.main.keep-alive=true
spring.threads.virtual.enabled=true

# ===============================================
# Static Content Configuration
# ===============================================
spring.web.resources.add-mappings=false

# ===============================================
# MVC Configuration
# ===============================================
spring.mvc.log-resolved-exception=false

# ===============================================
# Actuator Endpoints Configuration
# ===============================================
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true

# ===============================================
# Distributed Tracing Configuration
# ===============================================
spring.sleuth.sampler.probability=${SLEUTH_SAMPLER_PROBABILITY:1.0}

# ===============================================
# Logging Configuration
# ===============================================
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.starterkit.demo=INFO
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.hibernate.engine.transaction.spi=ERROR
logging.level.org.hibernate.event=ERROR
logging.level.org.hibernate.jdbc=ERROR
logging.level.org.hibernate.loader.plan.exec.process=ERROR
logging.level.org.hibernate.persister.entity=ERROR

# ===============================================
# OpenAPI Documentation Configuration
# ===============================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# ===============================================
# Bean Definition Overriding
# ===============================================
# spring.main.allow-bean-definition-overriding=true

# ===============================================
# JWT Properties
# ===============================================
jwt.secret=${JWT_SECRET:your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here_your_jwt_secret_here}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.clockSkew=${JWT_CLOCK_SKEW:30000}

# ===============================================
# OAuth2 Properties
# ===============================================
## Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email, address, phone
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

## Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.scope=public_profile, email
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v8.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v8.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture{url}
spring.security.oauth2.client.provider.facebook.jwk-set-uri=https://www.facebook.com/.well-known/openid-configuration

# ===============================================
# CORS Configuration
# ===============================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-methods=${CORS_ALLOWED_METHODS:*}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}

# ===============================================
# Server Error Configuration
# ===============================================
server.error.whitelabel.enabled=false
server.error.include-message=always

# ===============================================
# Miscellaneous Configuration
# ===============================================
spring.main.banner-mode=off
client.slack.api-alert.webhook=${SLACK_WEBHOOK_URL:your-webhook-url}
client.slack.api-alert.name=${SLACK_CHANNEL_NAME:your-channel-name}

# ===============================================
# Additional Optimizations and Settings
# ===============================================

spring.batch.initialize-schema=always
spring.cache.redis.cache-null-values=false
logging.level.com.starterkit.demo=DEBUG
server.shutdown=graceful
spring.web.locale=EN
spring.jackson.serialization.INDENT_OUTPUT=true

# ===============================================
# KAFKA
# ===============================================

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Topic
kafka.topic.clickstream=clickstream-events

# Server Configuration (Optional)
server.port=8080
